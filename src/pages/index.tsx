import styles from "@/styles/Home.module.css";
import { Inter } from "next/font/google";
import Head from "next/head";
import Image from "next/image";
import { FormEvent, useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [members, setMembers] = useState([]);
  const [name, setName] = useState("");
  const [location, setLocation] = useState("");
  const [github, setGithub] = useState("");

  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("/api/members")
      .then((response) => response.json())
      .then((members) => setMembers(members))
      .finally(() => {
        setLoading(false);
      });
  }, [members, loading]);

  function submitSave(e: FormEvent) {
    e.preventDefault();
    setLoading(true);
    fetch("/api/members", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, location, github }),
    })
      .then((response) => response.json())
      .then((member) => {
        setMembers(members.concat(member));
        setName("");
        setLocation("");
        setGithub("");
      })
      .finally(() => {
        setLoading(false);
      });
  }

  function remove(id: string, name: string) {
    setLoading(true);
    const allowed = confirm(`Delete ${name}`);
    if (allowed) {
      fetch("/api/members", {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id }),
      }).finally(() => {
        setLoading(false);
      });
    }
  }

  return (
    <>
      <Head>
        <title>Datastax AstraDB Application</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>Datastax AstraDB Application</p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              <Image
                src="/next.svg"
                alt="Next Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>
        <div className={`pt-16`}>
          <div>
            <h1 className="py-5">Add new member</h1>
            <form
              onSubmit={(e) => submitSave(e)}
              className="grid md:flex gap-5"
            >
              <input
                className="px-3 py-2"
                disabled={loading}
                type="text"
                placeholder="Name"
                required
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
              <input
                className="px-3 py-2"
                disabled={loading}
                type="text"
                placeholder="Location"
                value={location}
                onChange={(e) => setLocation(e.target.value)}
              />
              <input
                className="px-3 py-2"
                disabled={loading}
                type="text"
                placeholder="github"
                value={github}
                onChange={(e) => setGithub(e.target.value)}
              />
              <input
                className="px-3 py-2 bg-black cursor-pointer hover:bg-gray-500 disabled:bg-gray-500 text-white"
                disabled={loading}
                type="submit"
                value="Submit"
              />
            </form>
            <ul className="mt-10 grid lg:grid-cols-2 gap-5">
              {members.length > 0 ? (
                members.map((member: any) => (
                  <li
                    className="relative flex items-start justify-between border border-gray-100 p-4 shadow-lg sm:p-6 lg:p-8"
                    key={member.id}
                  >
                    <div className="w-full">
                      <h3 className="mt-4 text-lg font-bold text-gray-900 sm:text-xl">
                        {member.name}
                      </h3>
                      <p className="mt-2 hidden text-sm sm:block">
                        {member.location}, {member.github}
                      </p>
                      <div className="w-full flex justify-end text-xs">
                        <button
                          className="px-3 py-2 bg-black text-white disabled:bg-gray-500 hover:bg-gray-500"
                          onClick={(e) => remove(member.id, member.name)}
                          disabled={loading}
                        >
                          Delete
                        </button>
                      </div>
                    </div>
                  </li>
                ))
              ) : (
                <div>No members</div>
              )}
            </ul>
          </div>
        </div>
      </main>
    </>
  );
}
